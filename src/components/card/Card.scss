@use "../../styles/base/mixins/index" as *;
@use "../../styles/base/functions/index" as *;
@use "../../styles/base/variables/index" as *;

@mixin create-card {
  .rooms {
    @include grid-columns(grid, repeat(var(--rooms-count, 3), minmax($gap-3xl, 1fr)), 0, stretch);
    margin-block-start: 5svb;
  }

  section#rooms{
    position: relative;
  }

  .card {
    container-type: inline-size;
    position: relative;
    display: grid;
    place-items: center;
    aspect-ratio: 16 / 9;
    overflow: hidden;
    background-color: $color-transparent;
    border: none;
    cursor: pointer;
    padding: 0;

    @include mq-hover{
      --card-btn_translate-y: 0;
      --card-img_scale: 1.1;
      --card-btn_opacity: 1;
    }

    &__content {
      @include flex-set(flex, row, nowrap, 5cqi, flex-end, space-between, center);
      border-image: linear-gradient($color-transparent 50%, hsl(from #{$color-black} h s l / .85)) fill 1;
      transition: opacity $trans-time $trans-fnc;
      z-index: 2;
      position: absolute;
      inset: 0;
      padding: 5cqi;
    }

    > img{
      position: absolute;
      display: block;
      min-inline-size: calc(100% + $gap-xs);
      z-index: 1;
      pointer-events: none;
      scale: var(--card-img_scale, 1);
      opacity: var(--card-img_opacity, 1);
      transition: filter $trans-time $trans-fnc, scale $trans-time $trans-fnc, opacity $trans-time $trans-fnc;
    }

    .btn{
      opacity: var(--card-btn_opacity, 0);
      transition: opacity $trans-time $trans-fnc, translate $trans-time $trans-fnc;
      translate: 0 var(--card-btn_translate-y, 2.5cqb);
    }

    strong {
      color: $color-white;
      font-size: clamp($gap-l, 5cqb, $gap-xl);
      text-wrap: pretty;
      text-align: left;
    }
  }
}
